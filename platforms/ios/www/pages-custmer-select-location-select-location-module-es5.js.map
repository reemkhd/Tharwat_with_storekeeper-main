{"version":3,"sources":["webpack:///src/app/pages/custmer/select-location/select-location.page.scss","webpack:///src/app/pages/custmer/select-location/select-location.page.ts","webpack:///src/app/pages/custmer/select-location/select-location-routing.module.ts","webpack:///src/app/pages/custmer/select-location/select-location.module.ts","webpack:///src/app/pages/custmer/select-location/select-location.page.html"],"names":["SelectLocationPage","geolocation","nativeGeocoder","loadMap","getCurrentPosition","then","resp","latitude","coords","longitude","latLng","google","maps","LatLng","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","getAddressFromCoords","map","Map","mapElement","nativeElement","addListener","lat","lng","error","console","log","lattitude","options","useLocale","maxResults","reverseGeocode","result","address","responseAddress","Object","entries","key","value","length","push","reverse","slice","selector","template","routes","path","component","SelectLocationPageRoutingModule","imports","forChild","exports","SelectLocationPageModule","declarations"],"mappings":"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","file":"pages-custmer-select-location-select-location-module-es5.js","sourcesContent":["export default \"#map {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.icon {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  height: 60px;\\n  width: 60px;\\n  transform: translate(-50%, -50%);\\n}\\n\\nion-button {\\n  position: absolute;\\n  bottom: 60px;\\n  margin: 0 auto;\\n  width: 90%;\\n  left: 50%;\\n  transform: translateX(-50%);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NlbGVjdC1sb2NhdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUVFO0VBQ0Usa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsZ0NBQUE7QUFDSjs7QUFFRTtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxVQUFBO0VBQ0EsU0FBQTtFQUNBLDJCQUFBO0FBQ0oiLCJmaWxlIjoic2VsZWN0LWxvY2F0aW9uLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtYXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBcbiAgLmljb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIHdpZHRoOiA2MHB4O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICB9XG4gIFxuICBpb24tYnV0dG9ue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IDYwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDkwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB9Il19 */\";","// import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n// import { ModalController } from '@ionic/angular';\n// // import { google } from \"google-maps\";\n\n// declare var google;\n// @Component({\n//   selector: 'app-select-location',\n//   templateUrl: './select-location.page.html',\n//   styleUrls: ['./select-location.page.scss'],\n// })\n// export class SelectLocationPage implements OnInit {\n//   map: any;\n//   @ViewChild('map') mapElement: ElementRef;\n//   constructor(\n//     private modalCtrl: ModalController\n//   ) {\n\n\n//     navigator.geolocation.getCurrentPosition((res) => {\n//       console.log(\"res\", res);\n//       const { coords } = res;\n//       this.addMap(coords.latitude, coords.longitude);\n//     });\n//   }\n\n//   ngOnInit() {\n//   }\n\n//   close1() {\n//     this.modalCtrl.dismiss();\n//   }\n\n//   close(data: { lat: any; lng: any; }) {\n//     this.modalCtrl.dismiss(data);\n//   }\n\n\n//   addMap(lat, long) {\n\n//     let latLng = new google.maps.LatLng(lat, long);\n\n//     let mapOptions = {\n//       center: latLng,\n//       zoom: 15,\n//       mapTypeId: google.maps.MapTypeId.ROADMAP\n//     }\n\n//     this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n//   }\n\n//   getMapCenter() {\n//     console.log(this.map.getCenter().lat());\n//     console.log(this.map.getCenter().lng());\n\n//     this.close({\n//       lat: this.map.getCenter().lat(),\n//       lng: this.map.getCenter().lng()\n//     })\n//   }\n\n// }\n\n\n// // @ViewChild(\"map\") mapElement: { nativeElement: any; };\n// // map: any;\n// // constructor() {\n  \n// // }\n\n// // ngOnInit(){\n// //   this.initMap();\n// // }\n\n// // initMap(){\n\n// //   let coords = new google.maps.LatLng(25,80);\n// //   let mapOptions: google.maps.MapOptions = {\n// //     center: coords,\n// //     zoom: 11,\n// //     mapTypeId: google.maps.MapTypeId.ROADMAP\n// //   }\n\n// //   this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions)\n\n// //   let marker: google.maps.Marker = new google.maps.Marker({\n// //     map: this.map,\n// //     position: coords\n// //   })\n\n// // }\n\n// // }\n\n\n// home.page.ts\nimport { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\n\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\ndeclare var google;\n\n@Component({\n  selector: 'app-select-location',\n  templateUrl: './select-location.page.html',\n  styleUrls: ['./select-location.page.scss'],\n})\nexport class SelectLocationPage implements OnInit {\n\n  @ViewChild('map', { static: false }) mapElement: ElementRef;\n  map: any;\n  address: string;\n\n  latitude: number;\n  longitude: number;\n\n  constructor(\n    private geolocation: Geolocation,\n    private nativeGeocoder: NativeGeocoder) {\n  }\n\n\n  ngOnInit() {\n    this.loadMap();\n  }\n\n  loadMap() {\n    this.geolocation.getCurrentPosition().then((resp) => {\n\n      this.latitude = resp.coords.latitude;\n      this.longitude = resp.coords.longitude;\n\n      let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n      let mapOptions = {\n        center: latLng,\n        zoom: 15,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      }\n\n      this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\n\n      this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n\n      this.map.addListener('dragend', () => {\n\n        this.latitude = this.map.center.lat();\n        this.longitude = this.map.center.lng();\n\n        this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n      });\n\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n  }\n\n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n\n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n      });\n\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SelectLocationPage } from './select-location.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectLocationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SelectLocationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SelectLocationPageRoutingModule } from './select-location-routing.module';\n\nimport { SelectLocationPage } from './select-location.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SelectLocationPageRoutingModule\n  ],\n  declarations: [SelectLocationPage]\n})\nexport class SelectLocationPageModule {}\n","export default \"<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"primary\\\" (click)=\\\"close()\\\">\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n    </ion-buttons>\\n    <ion-title>select-location</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <div #map id=\\\"map\\\"></div>\\n  <img src=\\\"../../assets//678111-map-marker-512.webp\\\" class=\\\"icon\\\" />\\n\\n  <ion-button (click)=\\\"getMapCenter()\\\" color=\\\"danger\\\">Select Location</ion-button>\\n</ion-content> -->\\n\\n<ion-header [translucent]=\\\"true\\\">\\n\\n  <ion-toolbar color=\\\"warning\\\">\\n    <ion-button (click)=\\\"loadMap()\\\" shape=\\\"round\\\" color=\\\"dark\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"locate\\\"></ion-icon>\\n      Where I Am\\n    </ion-button>\\n    <ion-title slot=\\\"end\\\">Google Map</ion-title>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n\\n  <div class=\\\"map-wrapper\\\">\\n    <div id=\\\"map_center\\\">\\n      <img src=\\\"../../assets//678111-map-marker-512.webp\\\" class=\\\"icon\\\" />\\n    </div>\\n    <div #map id=\\\"map\\\"></div>\\n  </div>\\n\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Lattitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{latitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Longitude</b>\\n      </ion-col>\\n      <ion-col>\\n        {{longitude}}\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col size=\\\"3\\\">\\n        <b>Address</b>\\n      </ion-col>\\n      <ion-col>\\n        {{address}}\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n\\n</ion-content>\";"]}